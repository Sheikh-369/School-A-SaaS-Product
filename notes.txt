npm init -y
npm i express
npm i -D @types/express
npm i dotenv
npm i -D @types/node
npm i -D nodemon
npm i -D ts-node
npm i -D typescript
npx tsc --init
npm i sequelize-typescript
npm i mysql2
npm i sequelize

try catch-should be wrapped in every asynchronous function

wrapper-no need to wrap in each asynchronous function

locally----
cloud---

cloudinary.com-->sign upload
login
cloudinary_name
cloudinary_api
cloudinary_secret

File Handling Process(Concept/Flow)
1.services-->cloudinaryConfig.ts
2.middleware-->multerUpload
3.controllers-->kun file ma image chainx(eg courseController.ts for courseThumbnail)
4.table ma field pani banaune(schoolController.ts ma)
5. courseController ko route ma upload lai import grera routing ma rakhne


Email Sending Flow:
1. generate password(include a column in teacher table + include and insert in teacherController.ts)

2. generate random password for teacher(services-->generateTeacherPassword)

3.nodemailer package installation
4.nodemail configuration(sender information and receiver information are kept)
5. just below teacher creation in teacherController and above the response, write the logic for sending email.


const otp = generateOTP(); // your OTP logic

const emailHTML = `
  <div style="font-family: Arial, sans-serif; max-width: 500px; margin: auto; background: #fff; padding: 30px; border-radius: 6px; text-align: center;">
    <h2 style="color: #333;">Password Reset OTP</h2>
    <p style="color: #555;">Use the OTP below to reset your password:</p>
    <p style="font-size: 28px; font-weight: bold; color: #2d89ef; margin: 20px 0;">${otp}</p>
    <p style="color: #999;">This code is valid for 10 minutes.</p>
  </div>
`;
